# If this is your first time writing a language grammar, check out:
#   - http://manual.macromates.com/en/language_grammars

'scopeName': 'source.cobol'
'name': 'COBOL'
'fileTypes': [
  'cbl'
  'sqb'
  'ccp'
]
'patterns': [

  {
    'captures':
        '1':
          'name': 'invalid.illegal.cobol'
        '2':
          'name': 'comment.cobol'
    'match': '(^.{6})((\\*)(.{64}|.*$))'
  }
  # {
  #   'match': '(^.{6}(\\*)(.{64}|.*$))'
  #   'name': 'comment.cobol'
  # }
  {
    'match': '(^.{6}([^\\s|\\*]).*$)'
    'name': 'invalid.illegal.cobol'
  }
  {
    'match': '(^.{6})'
    'name': 'invalid.illegal.cobol'
  }
  {
    'match': '(?<=.{71}).*$'
    'name': 'invalid.illegal.cobol'
  }
  #-----------------------------
  # {
  #   'captures':
  #       '1':
  #         'name': 'invalid.illegal.cobol'
  #       '2':
  #         'name': 'invalid.illegal.cobol'
  #   'match': '(^.{7})(\\d+\\s+.*\\b[^-])'
  # }
  # {
  #   'match': '\\d+\\s+.*\\b[^-]'
  #   'name': 'string.cobol'
  # }
  # {
  #   'captures':
  #       '1':
  #         'name': 'invalid.illegal.cobol'
  #       '2':
  #         'name': 'invalid.illegal.cobol'
  #   'match': '(^.{72})(.*$)'
  # }
  # {
    #'match': '\\b(?<!-)(?i:id\\s*division|identification\\s*division|identification|property-id|getter|setter|entry|function-id|attribute|interface-id|factory|ctl|class-control|options|environment\\s*division|environment-name|environment-value|environment|configuration\\s*section|configuration|decimal-point|call-convention|special-names|cursor\\s*is|update|picture\\s*symbol|currency\\s*sign|currency|repository|input-output\\s*section|input-output|file\\s*section|file-control|select|optional|i-o-control|data\\s*division|working-storage\\s*section|working-storage|section|local-storage|linkage\\s*section|linkage|communication|report|screen\\s*section|fd|rd|cd|sd|printing|procedure\\s*division|procedure|debugging|declaratives|security|based-storage|size|font|national-edited|national)\\b[^-]'
  #   'match': '\\b(?<!-)(IDENTIFICATION\\s*DIVISION|ENVIRONMENT\\s*DIVISION|DATA\\s*DIVISION|PROCEDURE\\s*DIVISION\\s(.*)|PROCEDURE\\s*DIVISION\\s)\\b[^-]'
  #   'name': 'entity.name.section'
  # }
  #
  # {
  #   'match': '(\\d+-\\S*\\b[^-]|\\d+-\\S*\\b)'
  #   'name': 'entity.name.function.cobol'
  # }




  # {
  #   'match': '\\bPERFORM\\b'
  #   'name': 'keyword.cobol'
  # }
  # {
  #   'match': '\\bCOPY\\s*\\w+\\b[^-]'
  #   'name': 'keyword.other.unit.cobol'
  # }

  # {
  #   'match': '\\bMOVE\\b|\\bTO\\b|\\s*SET|\\s*DISPLAY'
  #   'name': 'keyword.control.cobol'
  # }
  # {
  #   'captures':
  #       '1':
  #         'name': 'keyword.other.unit.cobol'
  #   'match': '\\b(MOVE)\\b|\\bTO\\b|\\s*SET|\\s*DISPLAY'
  #   'name': 'keyword.control.cobol'
  # }
  # {
  #   'match': '\\b(?i)(COPY)\\b'
  #   'name': 'keyword.other.unit.cobol'
  # }
  # {
  #   'match': '\\b(?i)(DISPLAY|MOVE|SET|GOBACK|)\\b'
  #   'name': 'keyword.control.cobol'
  # }
  # {
  #   'match': '(?<!\')'
  #   'name': 'invalid.illegal.cobol'
  # }
  # {
  #   begin: "(\\b(?i)IF\\b)"
  #   end: "END-IF"
  #   name: "string.quoted.cobol"
  #   patterns: [
  #     {
  #       'match': '\\b(?i)(DISPLAY|MOVE|SET|GOBACK|)\\b'
  #       'name': 'string.quoted.double.cobol'
  #     }
  #   ]
  #
  # }






]
scopeName: "entity.name.section.cobol"
